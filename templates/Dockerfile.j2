# Variables - Setup ROS2 distribution.
ARG ROS_DISTRO={{ ros_distro }}

# Docker - Pull base image
FROM osrf/ros:$ROS_DISTRO-desktop-full

# Environment - Setup ARGs and ENV, after FROM reset all args.
ARG DEBIAN_FRONTEND=noninteractive
ARG USER_NAME
ARG USER_PASSWORD
ARG USER_UID
ARG USER_GID
ENV UID=$USER_UID
ENV GID=$USER_GID
ENV USER=$USER_NAME
ENV SHELL=/bin/bash
ENV TZ=Europe/Berlin
ENV TERM=xterm-256color
ENV PATH=$PATH:/home/$USER/.local/bin

# Environment - Setup internationalization and styles.
RUN ln -snf /usr/share/zoneinfo/$TZ /etc/localtime && echo $TZ > /etc/timezone

{{ pre_package_install | default('') }}

# Packages - Update and Install
RUN apt-get update && apt-get install -y \
    build-essential \
    clang-format \
    cmake \
    curl \
    gdb \
    git \
    lsb-release \
    python3 \
    python3-pip \
    python3-venv \
    ros-dev-tools \
    sudo \
    tree \
    udev \
    vim \
    wget \
    {% for pkg in extra_packages %}{{ pkg }}{% if not loop.last %} \{% endif %}\n    {% endfor %}
    && rm -rf /var/lib/apt/lists/*

{{ post_package_install | default('') }}

# Make python and pip globally available if missing
RUN [ ! -e /usr/bin/python ] && ln -s /usr/bin/python3 /usr/bin/python || true && \
    [ ! -e /usr/bin/pip ] && ln -s /usr/bin/pip3 /usr/bin/pip || true

# Initialize rosdep
RUN rosdep init || true

# Remove existing ubuntu user if it exists and conflicts
RUN if id "ubuntu" &>/dev/null; then \
        if [ "$(id -u ubuntu)" = "${UID}" ] || [ "$(id -g ubuntu)" = "${GID}" ]; then \
            userdel -r ubuntu 2>/dev/null || true; \
            groupdel ubuntu 2>/dev/null || true; \
        fi; \
    fi

# Remove existing group with target GID if it exists
RUN if getent group "${GID}" &>/dev/null; then \
        groupdel "$(getent group "${GID}" | cut -d: -f1)" 2>/dev/null || true; \
    fi

# Create user from Variables.
RUN echo "Creating user ${USER} with UID ${UID} and GID ${GID}..."
RUN groupadd --gid "${GID}" "${USER}" && \
    useradd --uid "${UID}" --gid "${GID}" -m --shell $(which bash) "${USER}" -G sudo && \
    echo "${USER}:${USER_PASSWORD}" | chpasswd && \
    echo "%sudo ALL=(ALL) NOPASSWD: ALL" > /etc/sudoers.d/sudogrp && \
    chmod 0440 /etc/sudoers.d/sudogrp && \
    chown ${UID}:${GID} -R /home/${USER}

{{ additional_sudo_commands | default('') }}

USER $USER
WORKDIR /home/$USER

# Create workspace directory with correct ownership
RUN mkdir -p /home/$USER/workspace

# Source ROS environment automatically
SHELL ["/bin/bash", "-c"]
RUN echo "source /opt/ros/${ROS_DISTRO}/setup.bash" >> /home/$USER/.bashrc
RUN rosdep update || true

{{ additional_user_commands | default('') }}

# Set up entrypoint
ENTRYPOINT ["/bin/bash", "-c", "source /opt/ros/${ROS_DISTRO}/setup.bash && exec bash"]